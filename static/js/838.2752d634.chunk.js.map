{"version":3,"file":"static/js/838.2752d634.chunk.js","mappings":"8LAyBA,UArBqB,WACnB,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GAASI,KAAKL,EACrC,GAAE,CAACC,KAIF,8BACGF,IACC,wBACGA,EAAQO,KAAI,SAAAC,GACX,OAAO,wBAAqBA,EAAOC,SAAnBD,EAAOE,GACxB,OAKV,C,+LCtBKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAEoBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,IAAR,MATG,gFAaA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAwCC,EAAYC,GAApD,iGAEoBV,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTa,MAAOF,EACPC,KAAAA,KAND,cAEGP,EAFH,yBASIA,EAASC,KAAKC,SATlB,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BvB,GAA9B,iGAEoBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,GAAW,CAC/CY,OAAQ,CACNC,QAASJ,EACTD,GAAIR,KALL,cAEGc,EAFH,yBAQIA,EAASC,MARb,gCAUHE,QAAQC,IAAR,MAVG,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAqCxB,GAArC,iGAEoBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,EAAV,YAA6B,CACvDY,OAAQ,CACNC,QAASJ,EACTD,GAAIR,KALL,cAEGc,EAFH,yBAQIA,EAASC,KAAKU,MARlB,gCAUHR,QAAQC,IAAR,MAVG,gFAcA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAqCH,GAArC,iGAEoBW,EAAAA,EAAAA,GAAM,SAAD,OAAUX,EAAV,YAA6B,CACvDY,OAAQ,CACNC,QAASJ,EACTD,GAAIR,KALL,cAEGc,EAFH,yBAQIA,EAASC,KAAKC,SARlB,gCAUHC,QAAQC,IAAR,MAVG,gFA1DPP,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MovieReviews/MovieReviews.jsx","services/moviesAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieReviewsById } from 'services/moviesAPI';\nimport { useParams } from 'react-router-dom';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n\n  //console.log(reviews); //сначала консолит нулл, потом только массив\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews.map(review => {\n            return <li key={review.id}>{review.content}</li>;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesBySearchQuery(searchWord, page) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: searchWord,\n        page,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCreditsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviewsById","then","map","review","content","id","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","log","fetchMoviesBySearchQuery","searchWord","page","query","fetchMovieById","fetchMovieCreditsById","cast"],"sourceRoot":""}