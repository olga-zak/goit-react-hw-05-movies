{"version":3,"file":"static/js/282.a3c079d2.chunk.js","mappings":"mPAIaA,GAFOC,EAAAA,GAAAA,GAAH,sBAEGA,EAAAA,GAAAA,GAAH,qGAMJC,EAASD,EAAAA,GAAAA,EAAH,oE,SC0BnB,EA9BqB,WACnB,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GAASI,KAAKL,EACrC,GAAE,CAACC,KAGF,8BACsB,IAAnBF,EAAQO,QACP,qDAEA,wBACGP,EAAQQ,KAAI,SAAAC,GACX,OACE,UAACb,EAAD,YACE,UAACE,EAAD,yBACcW,EAAOC,OADrB,IAC8B,IAC3BD,EAAOE,WAAWC,UAAU,EAAG,QAElC,uBAAIH,EAAOI,YALFJ,EAAOK,GAQrB,OAKV,C,+LCjCKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAEoBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,IAAR,MATG,gFAaA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAwCC,EAAYC,GAApD,iGAEoBV,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTa,MAAOF,EACPC,KAAAA,KAND,cAEGP,EAFH,yBASIA,EAASC,KAAKC,SATlB,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,iGAEoBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,GAAW,CAC/CgB,OAAQ,CACNC,QAASJ,EACTD,GAAIZ,KALL,cAEGkB,EAFH,yBAQIA,EAASC,MARb,gCAUHE,QAAQC,IAAR,MAVG,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAqC5B,GAArC,iGAEoBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,EAAV,YAA6B,CACvDgB,OAAQ,CACNC,QAASJ,EACTD,GAAIZ,KALL,cAEGkB,EAFH,yBAQIA,EAASC,KAAKU,MARlB,gCAUHR,QAAQC,IAAR,MAVG,gFAcA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAqCH,GAArC,iGAEoBe,EAAAA,EAAAA,GAAM,SAAD,OAAUf,EAAV,YAA6B,CACvDgB,OAAQ,CACNC,QAASJ,EACTD,GAAIZ,KALL,cAEGkB,EAFH,yBAQIA,EAASC,KAAKC,SARlB,gCAUHC,QAAQC,IAAR,MAVG,gFA1DPP,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MovieReviews/MoviesReviews.styled.js","components/MovieReviews/MovieReviews.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  font-size: 1.1em;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Author = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieReviewsById } from 'services/moviesAPI';\nimport { useParams } from 'react-router-dom';\n\nimport { Item, Author } from './MoviesReviews.styled';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>There are no reviews yet</p>\n      ) : (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <Item key={review.id}>\n                <Author>\n                  Written by {review.author},{' '}\n                  {review.created_at.substring(0, 10)}\n                </Author>\n                <p>{review.content}</p>\n              </Item>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesBySearchQuery(searchWord, page) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: searchWord,\n        page,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCreditsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Item","styled","Author","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviewsById","then","length","map","review","author","created_at","substring","content","id","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","log","fetchMoviesBySearchQuery","searchWord","page","query","fetchMovieById","fetchMovieCreditsById","cast"],"sourceRoot":""}