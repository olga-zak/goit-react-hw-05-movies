{"version":3,"file":"static/js/436.0da7c552.chunk.js","mappings":"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","sources":["components/CommonStyles.js","components/LoaderSuspense/LoaderSuspense.styled.js","components/LoaderSuspense/LoaderSuspense.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MoviePage/MoviePage.styled.js","pages/MoviePage/MoviePage.jsx","hooks/useFetchMovie.js","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nimport { LoaderWrapper } from './LoaderSuspense.styled';\n\nexport const LoaderSuspense = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardWrapper = styled.div`\n  position: relative;\n  width: 300px;\n  min-height: 250px;\n  margin: 20px auto;\n  border-radius: 10px;\n  box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n\n  @media screen and (min-width: 480px) {\n    width: 450px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 730px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 850px;\n  }\n`;\n\nexport const MovieHeader = styled.div`\n  padding: 25px;\n  height: 40%;\n`;\n\nexport const MainHeader = styled.h1`\n  margin-bottom: 10px;\n  color: black;\n  font-weight: 600;\n`;\n\nexport const Score = styled.span`\n  font-weight: 500;\n  font-size: 1.1em;\n`;\n\nexport const Image = styled.img`\n  float: left;\n  margin-right: 20px;\n  height: 120px;\n  box-shadow: 0 0 20px -10px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  margin-top: 30px;\n  font-weight: 500;\n  color: #141313;\n`;\nexport const ListItem = styled.li`\n  margin-right: 5px;\n  &:not(:last-child):after {\n    content: ',';\n  }\n`;\n\nexport const Overview = styled.p`\n  padding: 25px;\n  height: 50%;\n  font-size: 17px;\n  font-weight: 500;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  text-transform: uppercase;\n  color: #fff;\n  font-weight: 500;\n  transition: 0.4s;\n  &:hover {\n    color: #333;\n  }\n`;\n\nexport const Background = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  right: 0;\n  background-size: cover;\n  border-radius: 11px;\n  background-image: url(${props => props.someUrl});\n  background-repeat: no-repeat;\n  opacity: 0.3;\n  background-position: 50% 50%;\n`;\n\nexport const AdditionalInfo = styled.ul`\n  position: relative;\n  z-index: 5;\n\n  height: 10%;\n  padding: 25px;\n`;\nexport const AdditionalInfoItem = styled.li`\n  display: inline-block;\n  color: rgba(0, 0, 0, 0.3);\n  transition: color 0.3s;\n  transition-delay: 0.15s;\n  margin: 0 10px;\n  &:hover {\n    transition: color 0.3s;\n    color: rgba(0, 0, 0, 0.7);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieCardWrapper,\n  MovieHeader,\n  MainHeader,\n  Score,\n  Image,\n  Genres,\n  Overview,\n  Background,\n  AdditionalInfo,\n  AdditionalInfoItem,\n  ListItem,\n  LinkStyled,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movieData }) => {\n  const {\n    title,\n    release_date,\n    poster_path,\n    overview,\n    genres,\n    vote_average,\n    backdrop_path,\n  } = movieData;\n  const listOfGenres = genres.map(genre => (\n    <ListItem key={genre.id}>{genre.name}</ListItem>\n  ));\n  const userScore = Math.round(vote_average * 10);\n  const release_year = release_date.split('-')[0];\n  const location = useLocation();\n  return (\n    <MovieCardWrapper>\n      <MovieHeader>\n        <Image\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <MainHeader>\n          {title} ({release_year})\n        </MainHeader>\n        <Score>Score {userScore}%</Score>\n        <Genres>{listOfGenres}</Genres>\n      </MovieHeader>\n\n      <Overview>{overview}</Overview>\n\n      <AdditionalInfo>\n        <AdditionalInfoItem>\n          <LinkStyled to=\"cast\" state={location.state}>\n            Cast\n          </LinkStyled>\n        </AdditionalInfoItem>\n        <AdditionalInfoItem>\n          <LinkStyled to=\"reviews\" state={location.state}>\n            Reviews\n          </LinkStyled>\n        </AdditionalInfoItem>\n      </AdditionalInfo>\n\n      <Background\n        someUrl={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n      ></Background>\n    </MovieCardWrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    vote_average: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 0;\n  padding: 5px;\n  cursor: pointer;\n  height: 40px;\n  min-width: 120px;\n  font-size: 1.1em;\n  font-weight: 700;\n  color: #fff;\n  text-transform: uppercase;\n  background: #496785;\n  border-radius: 5px;\n  transition: all 0.4s;\n  &:hover {\n    box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n    transform: scale(1.02);\n  }\n  &:active {\n    box-shadow: 0px 0px 12px 0px rgba(225, 225, 225, 1);\n  }\n  &:focus {\n    outline: 0;\n    box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useFetchMovie } from 'hooks/useFetchMovie';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nimport { Container } from 'components/CommonStyles';\nimport { Button } from './MoviePage.styled';\nimport { LoaderSuspense } from 'components/LoaderSuspense/LoaderSuspense';\n\nconst MoviePage = () => {\n  const movie = useFetchMovie();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <>\n      <Container>\n        {movie && (\n          <>\n            <Button\n              onClick={() => {\n                navigate(location?.state?.from ?? '/');\n              }}\n            >\n              Go back\n            </Button>\n            <MovieCard movieData={movie} />\n          </>\n        )}\n        <Suspense fallback={<LoaderSuspense />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\nexport default MoviePage;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieById } from 'services/moviesAPI';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  //убрать этот isFirstRender при пуше на гит, из-за него идёт запрос на сервер\n  // const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    // if (isFirstRender.current) {\n    //   isFirstRender.current = false;\n    //   return;\n    // }\n    fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return movie;\n};\n","import axios from 'axios';\n\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesBySearchQuery(searchWord, page) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: searchWord,\n        page,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCreditsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","LoaderWrapper","LoaderSuspense","height","width","color","wrapperStyle","visible","ariaLabel","MovieCardWrapper","MovieHeader","MainHeader","Score","Image","Genres","ListItem","Overview","LinkStyled","Link","Background","props","someUrl","AdditionalInfo","AdditionalInfoItem","MovieCard","movieData","title","release_date","poster_path","overview","genres","vote_average","backdrop_path","listOfGenres","map","genre","name","id","userScore","Math","round","release_year","split","location","useLocation","src","alt","to","state","Button","movie","useState","setMovie","movieId","useParams","useEffect","fetchMovieById","then","useFetchMovie","navigate","useNavigate","onClick","from","Suspense","fallback","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","log","fetchMoviesBySearchQuery","searchWord","page","query","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}