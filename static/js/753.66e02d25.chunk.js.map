{"version":3,"file":"static/js/753.66e02d25.chunk.js","mappings":"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","sources":["components/CommonStyles.js","components/MoviesListItem/MovieListItem.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MovieList.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: 210px;\n  background-color: #496785;\n  border-radius: 5px;\n  transition: 0.4s;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n  }\n  &:active {\n    box-shadow: 0px 0px 12px 0px rgba(225, 225, 225, 1);\n  }\n`;\n\nexport const Img = styled.img`\n  border-top-right-radius: 5px;\n  border-top-left-radius: 5px;\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n  // color: #fff;\n`;\n\nexport const LinkText = styled(Link)`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: #fff;\n  font-weight: 500;\n  transition: 0.4s;\n  &:hover {\n    color: #333;\n  }\n`;\n","//import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item, Img, Text, LinkText } from './MovieListItem';\n\nexport const MoviesListItem = ({ title, id, poster }) => {\n  const location = useLocation();\n  // const idToString = id.toString();\n  return (\n    <Item>\n      {/* <Link to={idToString}>{title}</Link> */}\n      <LinkText to={`/movies/${id}`} state={{ from: location }}>\n        <Img src={`https://image.tmdb.org/t/p/w500${poster}`} alt={title} />\n        <Text>{title}</Text>\n      </LinkText>\n    </Item>\n  );\n};\n\nMoviesListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\n\nimport { List } from './MovieList';\n\nexport const MoviesList = ({ movies }) => {\n  //console.log(movies);\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <MoviesListItem\n            key={movie.id}\n            title={movie.title}\n            id={movie.id}\n            poster={movie.poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  //width: 500px;\n  width: 300px;\n  height: 40px;\n  margin: 0 auto 15px auto;\n  background: #496785;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nexport const Input = styled.input`\n  //width: 370px;\n  width: 180px;\n  padding: 12px 10px;\n  float: left;\n  color: #333;\n  border: 0;\n  background: transparent;\n  border-radius: 3px 0 0 3px;\n  &:hover {\n    box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n  }\n  &:focus {\n    outline: 0;\n    background: transparent;\n  }\n  @media screen and (min-width: 768px) {\n    width: 380px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  float: right;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n  height: 40px;\n  width: 120px;\n\n  font-size: 1.1em;\n  font-weight: 700;\n  color: #fff;\n  text-transform: uppercase;\n  background: transparent;\n  border-left: 1px solid rgba(0, 255, 117, 0.3);\n  border-radius: 0 3px 3px 0;\n  &:hover {\n    background: rgba(0, 255, 117, 0.3);\n    box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.3);\n    color: #333;\n  }\n  &:active {\n    box-shadow: 0px 0px 12px 0px rgba(225, 225, 225, 1);\n  }\n  &:focus {\n    outline: 0;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, Input, Button } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchWord, setSearchWord] = useState('');\n\n  const handleInputChange = event => {\n    setSearchWord(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchWord);\n    setSearchWord('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input\n        value={searchWord}\n        onChange={handleInputChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search for movies...\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport { fetchMoviesBySearchQuery } from 'services/moviesAPI';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nimport { Container } from 'components/CommonStyles';\n\nconst Movies = () => {\n  //const [searchWord, setSearchword] = useState('');\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    if (queryParam) {\n      async function fetchMovies() {\n        const data = await fetchMoviesBySearchQuery(queryParam, page);\n        setMovies(data);\n      }\n      fetchMovies();\n    }\n  }, [queryParam, page]);\n\n  const updateSearchQuery = query => {\n    setSearchParams({ query });\n    setPage(1);\n    setMovies([]);\n    //setTotalAmoutOfPages(0);\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={updateSearchQuery} />\n      {movies && <MoviesList movies={movies} />}\n      <Outlet />\n    </Container>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'd929b7a4b435aa22496bb0793b172bfc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesBySearchQuery(searchWord, page) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: searchWord,\n        page,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCreditsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","Item","Img","Text","LinkText","Link","MoviesListItem","title","id","poster","location","useLocation","to","state","from","src","alt","List","MoviesList","movies","map","movie","poster_path","Form","Input","Button","SearchForm","onSubmit","useState","searchWord","setSearchWord","event","preventDefault","value","onChange","target","type","autoComplete","placeholder","page","setPage","setMovies","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","fetchMovies","fetchMoviesBySearchQuery","data","query","API_KEY","fetchTrendingMovies","axios","params","api_key","response","results","console","log","fetchMovieById","movieId","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}